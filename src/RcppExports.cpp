// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// R_MCC
IntegerVector R_MCC(DataFrame data, double scaleDomain2Spacing, double curvatureThreshold);
RcppExport SEXP _RMCC_R_MCC(SEXP dataSEXP, SEXP scaleDomain2SpacingSEXP, SEXP curvatureThresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type scaleDomain2Spacing(scaleDomain2SpacingSEXP);
    Rcpp::traits::input_parameter< double >::type curvatureThreshold(curvatureThresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(R_MCC(data, scaleDomain2Spacing, curvatureThreshold));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RMCC_R_MCC", (DL_FUNC) &_RMCC_R_MCC, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RMCC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
